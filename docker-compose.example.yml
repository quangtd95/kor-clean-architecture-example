version: "3"

volumes:
  db:

services:
  # ---------------------web---------------------
  web:
    build: .
    image: quangtd95/fun-gpt-ktor-clean-architecture:1.0.0
    environment:
      - OPENAI_TOKEN=${OPENAI_TOKEN}
      - DATABASE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}?user=${POSTGRES_PASSWORD}&password=${POSTGRES_USER}
      - ES_HOST=${ES_HOST}
      - ES_PORT=${ES_PORT}
      - ES_USER=${ES_USER}
      - ES_PASSWORD=${ES_PASSWORD}
      - ES_HTTPS=${ES_HTTPS}
      - KAFKA_BOOTSTRAP_SERVER=${KAFKA_BOOTSTRAP_SERVER}
    ports:
      - "8989:8989"
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_healthy

  # ---------------------postgres db---------------------
  db:
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    image: postgres:14-alpine
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U gpt" ]
      interval: 1s

  # ---------------------elasticsearch db---------------------
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.0
    environment:
      - xpack.security.enabled=true
      - "discovery.type=single-node"
      - ELASTIC_PASSWORD=${ES_PASSWORD}
    ports:
      - "${ES_PORT}:${ES_PORT}"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50
  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:${ES_PORT}
      - ELASTICSEARCH_USERNAME=${ES_USER}
      - ELASTICSEARCH_PASSWORD=${ES_PASSWORD}
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
  # ---------------------kafka---------------------
  kafka:
    image: confluentinc/cp-kafka:7.5.3
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - 8085:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.14
    ports:
      - '22181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000